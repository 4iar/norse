name: C++ package

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CC: ${{ matrix.config.cc }}
  CXX: ${{ matrix.config.cxx }}

jobs:
  build-cpp:
    runs-on: ${{ matrix.config.os }}
    strategy:
      max-parallel: 4
      matrix:
        config:
          # - { name: "Windows cl", os: windows-latest, cc: "cl", cxx: "cl" }
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
          # - {
          #     name: "MacOS clang",
          #     os: macos-latest,
          #     cc: "clang",
          #     cxx: "clang++",
          #   }
        python-version: [3.7]
        #, 3.8, 3.9]
    name: "Build C++ - ${{ matrix.config.name}} Python v${{ matrix.python-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        if: ${{ !env.ACT }} # Cache not working due to https://github.com/nektos/act/issues/329
        uses: actions/cache@master
        env:
          # Increase this value to reset cache if environment.yaml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/cpp_pkgs_dir
          key: ${{ runner.os }}-python${{ matrix.python-version }}-${{ env.CACHE_NUMBER }} }}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: "3.20.x"
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
      - name: (Ubuntu) Install G++ and libtorch
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: |
          apt update
          apt install g++ libgtest-dev ninja-build -y
          wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-1.9.0%2Bcpu.zip -O ${{ github.workspace }}/libtorch.zip
          unzip -q ${{ github.workspace }}/libtorch.zip -d ${{ github.workspace }}/
      - name: (MacOS) Install clang and libtorch
        if: ${{ matrix.config.os == 'macos-latest' }}
        run: |
          brew install llvm
          wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.9.0%2Bcpu.zip -O ${{ github.workspace }}/libtorch.zip
          unzip -q ${{ github.workspace }}/libtorch.zip -d ${{ github.workspace }}/
      - name: (Windows) Install MinGW
        if: ${{ matrix.config.os == 'windows-latest' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
      - name: (Windows) Install libtorch
        if: ${{ matrix.config.os == 'windows-latest'}}
        run: |
          git clone -b master --recurse-submodule https://github.com/pytorch/pytorch.git
          mkdir pytorch-build
          cd pytorch-build
          cmake -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DPYTHON_EXECUTABLE:PATH=`which python3` -DCMAKE_INSTALL_PREFIX:PATH=../pytorch-install ../pytorch
          cmake --build . --target install
      - run: cd ${{ github.workspace }} && pwd && ls
      - run: env
      - name: Build
        run: |
          cmake -GNinja -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_PREFIX_PATH=${{ github.workspace }}/libtorch
          cmake --build build
      - name: Test
        run: |
          ctest --test-dir build/norse/csrc
