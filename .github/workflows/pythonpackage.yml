name: Python package

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      max-parallel: 4
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl" }
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
          - { name: "MacOS clang", os: macos-latest, cc: "clang", cxx: "clang++" }
        python-version: [3.7, 3.8, 3.9]
    name: "Build: ${{ matrix.config.os}} Python v${{ matrix.python-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -G Ninja
          build-type: Debug
      - name: Test with Ctest
        run: |
          cd build/norse/csrc
          ctest
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytorch-lightning
          pip install -e .
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest norse --cov=norse/torch --cov-config=.coveragerc --cov-report=xml
      - name: Test with PyType
        run: |
          pip install pytype
          pytype norse
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Lint with black
        run: |
          pip install black
          black --check norse
